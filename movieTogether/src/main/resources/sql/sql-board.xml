<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitc.full505_team2_project.mapper.BoardMapper">
  <!-- 게시글 리스트 불러오기 -->
  <select id="selectBoardList" resultType="com.bitc.full505_team2_project.dto.BoardDto">
    SELECT
      board_pk, board_title, board_writer,
      date_format(board_date, '%Y-%m-%d') AS board_date, board_visit_cnt
    FROM board
    WHERE board_delete_yn = 'N'
    ORDER BY board_pk desc
  </select>

  <!-- 검색 리스트 불러오기 -->
  <!-- 컬럼명으로 인식하게 만들려면 #{} 가 아닌 ${} 로 감싸줘야 한다 -->
  <select id="selectSearchList" parameterType="map" resultType="com.bitc.full505_team2_project.dto.BoardDto">
    SELECT
      board_pk, board_title, board_writer,
      date_format(board_date, '%Y-%m-%d') AS board_date, board_visit_cnt
    FROM board
    WHERE board_delete_yn = 'N'
    AND ${searchKey} like concat('%',#{searchItem},'%')
    ORDER BY board_pk desc
  </select>

  <!-- 게시글 상세 페이지 -->
  <select id="selectBoardDetail" resultType="com.bitc.full505_team2_project.dto.BoardDto" parameterType="int">
    SELECT board_pk, board_title, board_writer, board_content, date_format(board_date, '%Y-%m-%d') AS board_date,
    board_visit_cnt
    FROM board
    WHERE board_pk = #{boardPk}
  </select>

  <!-- 조회수 업데이트 -->
  <update id="updateHitCount" parameterType="int">
    UPDATE board
    SET board_visit_cnt = board_visit_cnt +1
    WHERE board_pk = #{boardPk}
  </update>

  <!-- 게시글 등록 -->
  <insert id="insertBoard" parameterType="com.bitc.full505_team2_project.dto.BoardDto" useGeneratedKeys="true" keyProperty="boardPk">
    INSERT INTO board (board_title, board_writer, board_content, board_date)
    VALUES (#{boardTitle}, #{boardWriter}, #{boardContent}, NOW())
  </insert>

  <!-- 게시글 수정 -->
  <update id="updateBoard" parameterType="com.bitc.full505_team2_project.dto.BoardDto">
    UPDATE board
    SET board_title = #{boardTitle},
        board_content = #{boardContent}
    WHERE board_pk = #{boardPk}
  </update>

  <!-- 게시글 삭제 -->
  <update id="deleteBoard" parameterType="int">
    UPDATE board
    SET board_delete_yn = 'Y'
    WHERE board_pk = #{boardPk}
  </update>

  <!-- 댓글 관련 -->
  <!-- 댓글 입력 -->
  <insert id="insertComment" parameterType="com.bitc.full505_team2_project.dto.CommentDto">
    INSERT INTO comment
    (comment_num, comment_id, comment_content, comment_date)
    VALUES (#{commentNum}, #{commentId}, #{commentContent}, NOW())
  </insert>

  <!-- 해당 게시글 댓글 리스트 출력 -->
  <select id="selectCommentList" parameterType="int">
    SELECT
    comment_pk, comment_num, comment_id, comment_content, date_format(comment_date, '%Y-%m-%d') AS comment_date
    FROM comment
    WHERE comment_delete_yn = 'N'
    AND comment_num = #{commentNum}
  </select>

  <!-- 댓글 삭제 -->
  <update id="deleteComment" parameterType="map">
    UPDATE comment
    SET comment_delete_yn = "Y"
    WHERE comment_pk = #{commentPk}
    AND comment_num = #{commentNum}
  </update>


  <!-- 지정한 게시글의 첨부 파일 목록보기 -->
  <select id="selectBoardFileList" parameterType="int" resultType="com.bitc.full505_team2_project.dto.BoardFileDto">
    SELECT board_file_id, board_pk, board_ofile_name, board_sfile_name,
    format(ROUND(board_file_size/1024), 0) AS board_file_size
    FROM board_file
    WHERE board_pk = #{boardPk} AND board_select = 1
  </select>

  <!-- 첨부파일 정보 DB에 추가하기 -->
  <insert id="insertBoardFileList" parameterType="com.bitc.full505_team2_project.dto.BoardFileDto">
    INSERT INTO board_file(board_pk, board_ofile_name, board_sfile_name, board_file_size, board_created_date, board_select)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.boardPk}, #{item.boardOfileName}, #{item.boardSfileName}, #{item.boardFileSize}, NOW(), 1)
    </foreach>
  </insert>

  <!-- 다운로드할 첨부파일 정보 가져오기 -->
  <!-- 매개 변수를 두개 사용해야 해서 parameterType을 map으로 설정(더 많으면 dto 타입) -->
  <select id="selectBoardFileInfo" parameterType="map" resultType="com.bitc.full505_team2_project.dto.BoardFileDto">
    SELECT
      board_ofile_name, board_sfile_name, board_file_size
    FROM board_file
    WHERE board_file_id = #{boardFileId}
    AND board_pk = #{boardPk}
    AND board_select = 1
  </select>

</mapper>

